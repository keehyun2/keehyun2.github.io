<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>keehyun2's note</title><link>https://keehyun2.github.io/</link><description>Recent content on keehyun2's note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 31 May 2022 15:00:18 +0900</lastBuildDate><atom:link href="https://keehyun2.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Mac 단축키</title><link>https://keehyun2.github.io/posts/mac-%EB%8B%A8%EC%B6%95%ED%82%A4/</link><pubDate>Tue, 31 May 2022 15:00:18 +0900</pubDate><guid>https://keehyun2.github.io/posts/mac-%EB%8B%A8%EC%B6%95%ED%82%A4/</guid><description>mac 단축키 ctrl(^) + space : 한/영 win(⌘) + space : spotlight 검색 ⌥ + ↑ / ⌥ + ↓ : 선택영역 확대 / 축소 ctrl(^) + D : 한줄 복사 (커스텀 - ctrl(^) + ⌥ + ↓) ctrl(^) + Y : 한줄 삭제(커스텀 - ctrl(^) + D) win(⌘) + N : 새 파일 Caps Lock : 짧게 누르면 한/영 전환, 길게 누르면 Caps Lock win(⌘) + a : 전체 선택 win(⌘) + c : 복사하기 win(⌘) + v : 붙혀넣기 ctrl(^) + T : refactor 옵션 보기 ⇧ + ⌘ + A : action 검색 ⌥ + ⌘ + [ : vscode 에서 folding code ⇧ + ⌘ + 3 : 전체화면 스크린샷 ⇧ + ⌘ + 4 : 일부 캡처 ⇧ + ⌘ + 4 + space : 창 캡처 mac 기호 ^ : control ⌥ : option(alt) ⌘ : mac(win) ⇧ : shift</description></item><item><title>플러터 UI 입문 정리(ch.4)</title><link>https://keehyun2.github.io/posts/%ED%94%8C%EB%9F%AC%ED%84%B0-ui-%EC%9E%85%EB%AC%B8-%EC%A0%95%EB%A6%ACch.4/</link><pubDate>Fri, 14 Jan 2022 13:42:52 +0900</pubDate><guid>https://keehyun2.github.io/posts/%ED%94%8C%EB%9F%AC%ED%84%B0-ui-%EC%9E%85%EB%AC%B8-%EC%A0%95%EB%A6%ACch.4/</guid><description>4챕터에 나온 위젯 Scaffold - 기본 구조가 있는 도화지라고 여기면됩니다. SafeArea - 화면을 안전한 영역에 배치시킵니다. Column - 위젯을 세로로 배치하는 위젯 Row - 위젯을 가로로 배치하는 위젯 Padding - 테두리 영역 여백을 주고싶을 때 사용 Text - 텍스트 출력에 사용하는 위젯 Text(&amp;quot;Kids&amp;quot;, style: TextStyle(fontWeight: FontWeight.bold)) Spacer - Column, Row 사이 간격에 여백을 자동으로 할당합니다. Expanded - 위젯을 테두리 위젯까지 늘립니다. SizedBox - 여백을 주는 데 유용한 위젯입니다. (크기 수동) Image - jpg, png 등 이미지 출력에 사용하는 위젯 Image.</description></item><item><title>DDD START(ch.2)</title><link>https://keehyun2.github.io/posts/ddd-startch.2/</link><pubDate>Fri, 31 Dec 2021 10:22:20 +0900</pubDate><guid>https://keehyun2.github.io/posts/ddd-startch.2/</guid><description>아키텍처 소프트웨어 아키텍처 에는 4가지 영역(계층)이 있습니다. (표현, 응용, 도메인, 인프라)
표현 영역(Controler)는 http request 와 response를 처리하는 계층입니다. 응용 영역(Service)는 내부 로직을 구현합니다. 로직을 직접 구현하기보단 도메인에 로직 구현을 위임합니다. 도메인 영역(Order, DTO, VO)은 도메인 모델을 구현하고, 도메인과 관련된 핵심 로직을 구현합니다. 인프라스트럭처 영역 (jpa 를 사용한 경우 Repository) 은 구현 기술을 다룹니다. 다른 ORM 프레임워크나 외부 시스템과 연동을 지원합니다. (계층구조) 아키텍처 4가지 영역을 사용할때 보편적으로 계층구조 아키텍처를 사용합니다.</description></item></channel></rss>